{"version":3,"sources":["components/Pool.js","components/PoolList.js","components/Map.js","App.js","serviceWorker.js","index.js"],"names":["Pool","handleClick","_this","props","getClickedPoolId","pool","pmaid","react_default","a","createElement","className","onClick","this","name","indoor_out","Component","PoolList","htmlFor","id","onChange","event","handleChange","target","value","poolList","map","key","components_Pool","Map","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","markers","bounds","window","google","maps","LatLngBounds","poolInfoWindow","InfoWindow","clickedPoolId","i","length","trigger","setContent","concat","address","phone","_this2","_loop","marker","Marker","animation","Animation","DROP","position","lat","parseFloat","latitude","lng","longitude","icon","url","addListener","addInfoWindowToInfoWindow","open","push","extend","setState","setMap","styledMapType","StyledMapType","elementType","stylers","color","visibility","featureType","document","getElementById","center","zoom","mapTypeControlOptions","mapTypeIds","mapTypes","set","setMapTypeId","fitBounds","initMap","generateMarkersArray","addMarkersToMap","prevProps","clearMarkersFromMap","triggerPoolInfoWindow","App","__","poolFilter","filteredPoolList","filter","item","fetch","method","mode","headers","Content-Type","data","app_token","then","response","json","getPoolData","components_PoolList","components_Map","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f13089d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Pool extends Component {\r\n\r\n  handleClick = () => {\r\n    return this.props.getClickedPoolId(this.props.pool.pmaid);\r\n  }\r\n\r\n  render() {\r\n    return <div>\r\n        <h3 className=\"pool-name\" onClick={this.handleClick} >\r\n          {this.props.pool.name}\r\n        </h3>\r\n        <p className=\"pool-type\">{this.props.pool.indoor_out}</p>\r\n      </div>;\r\n  }\r\n}\r\n\r\nexport default Pool;\r\n","import React, { Component } from 'react';\r\nimport Pool from './Pool';\r\n\r\nclass PoolList extends Component {\r\n  render() {\r\n\r\n    return <aside>\r\n        <label htmlFor=\"select-pool-type\">Pool Type:</label>\r\n        <select id=\"select-pool-type\" name=\"select-pool-type\" onChange={event => this.props.handleChange(this.props.pool, event.target.value)}>\r\n          <option value=\"Any\">Any</option>\r\n          <option value=\"Indoor\">Indoor</option>\r\n          <option value=\"Outdoor\">Outdoor</option>\r\n        </select>\r\n\r\n        <div>\r\n          <ol>\r\n            {this.props.poolList.map(pool => (\r\n              <li key={pool.pmaid} className=\"pool-list-item\">\r\n                <Pool\r\n                  pool={pool}\r\n                  getClickedPoolId={this.props.getClickedPoolId}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </aside>;\r\n  }\r\n}\r\n\r\nexport default PoolList;\r\n","import React, {Component} from 'react';\r\n\r\nclass Map extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      markers: [],\r\n      map: {},\r\n      bounds: new window.google.maps.LatLngBounds(),\r\n      poolInfoWindow: new window.google.maps.InfoWindow(),\r\n      clickedPoolId: null,\r\n    };\r\n  }\r\n\r\n  triggerPoolInfoWindow(){\r\n    for (let i = 0; i < this.state.markers.length; i++){\r\n      if (this.state.markers[i].id === this.props.clickedPoolId){\r\n        new window.google.maps.event.trigger(this.state.markers[i], 'click');\r\n      }\r\n    }\r\n  }\r\n\r\n  addInfoWindowToInfoWindow(i) {\r\n    this.state.poolInfoWindow.setContent(\r\n      `<p class=\"pool-name\">${this.props.poolList[i].name}</p> \r\n         <p>${this.props.poolList[i].address}</p>\r\n         <p>${this.props.poolList[i].phone}</p>\r\n         <p class=\"pool-type\">${this.props.poolList[i].indoor_out}</p>`\r\n    );\r\n  }\r\n\r\n  generateMarkersArray() {\r\n    let markers = [];\r\n    for (let i = 0; i < this.props.poolList.length; i++) {\r\n      let marker = new window.google.maps.Marker({\r\n        id: this.props.poolList[i].pmaid,\r\n        animation: window.google.maps.Animation.DROP,\r\n        position: {\r\n          lat: parseFloat(this.props.poolList[i].latitude),\r\n          lng: parseFloat(this.props.poolList[i].longitude)\r\n        },\r\n        icon: {\r\n          url: 'https://raw.githubusercontent.com/partiallymisplaced/circle-swim/master/src/cs-map-marker.png',\r\n        },\r\n\r\n      });\r\n      marker.addListener('click', () => {\r\n        this.addInfoWindowToInfoWindow(i)\r\n        this.state.poolInfoWindow.open(this.state.map, marker);\r\n      });\r\n      markers.push(marker);\r\n      this.state.bounds.extend(markers[i].position);\r\n    }\r\n    this.setState({ markers });\r\n  }\r\n\r\n  addMarkersToMap() {\r\n    for (let i = 0; i < this.state.markers.length; i++) {\r\n      this.state.markers[i].setMap(this.state.map);\r\n    }\r\n  }\r\n\r\n  clearMarkersFromMap() {\r\n    for (let i = 0; i < this.state.markers.length; i++) {\r\n      this.state.markers[i].setMap(null);\r\n    }\r\n  }\r\n\r\n  initMap() {\r\n    let styledMapType = new window.google.maps.StyledMapType([\r\n      {\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#f5f5f5\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n          {\r\n            \"visibility\": \"off\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#616161\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#f5f5f5\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"administrative.land_parcel\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n          {\r\n            \"visibility\": \"off\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"administrative.land_parcel\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#bdbdbd\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"administrative.neighborhood\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#b5b5b5\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"administrative.neighborhood\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#ffffff\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#eeeeee\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n          {\r\n            \"visibility\": \"off\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#757575\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"poi.business\",\r\n        \"stylers\": [\r\n          {\r\n            \"visibility\": \"off\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"poi.park\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#e5e5e5\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"poi.park\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#d7eec1\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"poi.park\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#9e9e9e\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#ffffff\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#949494\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#dadada\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#616161\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"road.local\",\r\n        \"stylers\": [\r\n          {\r\n            \"visibility\": \"off\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n          {\r\n            \"visibility\": \"off\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#b5b5b5\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"transit.line\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#e5e5e5\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"transit.station\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#eeeeee\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#c9c9c9\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#c4ddec\"\r\n          }\r\n        ]\r\n      }, {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n          {\r\n            \"color\": \"#9e9e9e\"\r\n          }\r\n        ]\r\n      }\r\n    ], {name: 'Styled Map'});\r\n\r\n    let map = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n      center: {\r\n        lat: 47.63626287,\r\n        lng: -122.35795027\r\n      },\r\n      zoom: 12,\r\n      mapTypeControlOptions: {\r\n        mapTypeIds: ['styled_map']\r\n      }\r\n    });\r\n    map.mapTypes.set('styled_map', styledMapType);\r\n    map.setMapTypeId('styled_map');\r\n    map.fitBounds(this.state.bounds);\r\n    return map;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let map = this.initMap();\r\n    await this.setState({ map });\r\n    await this.generateMarkersArray();\r\n    await this.addMarkersToMap();\r\n\r\n  }\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    if (prevProps.poolList !== this.props.poolList) {\r\n      await this.clearMarkersFromMap();\r\n      await this.generateMarkersArray();\r\n      await this.addMarkersToMap();\r\n    }\r\n    await this.triggerPoolInfoWindow();\r\n  }\r\n\r\n  render() {    \r\n    return (\r\n      <div id=\"map\" className=\"pool-map\"></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;\r\n","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport PoolList from './components/PoolList';\r\nimport Map from './components/Map';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      poolList: [],\r\n      filteredPoolList: [],\r\n      clickedPoolId: null\r\n    };\r\n  }\r\n  getClickedPoolId = clickedPoolId => {\r\n    this.setState({ clickedPoolId });\r\n  };\r\n  getPoolData() {\r\n    fetch(\"https://data.seattle.gov/resource/ppq2-qxkx\", {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: {\r\n        app_token: \"XYEEYf573j7hRlczkT6WSAZKK\"\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ poolList: data, filteredPoolList: data }));\r\n  }\r\n\r\n  // The pool data gets fetched\r\n  async componentDidMount() {\r\n    await this.getPoolData();\r\n  }\r\n\r\n  handleChange = (__, poolFilter) => {\r\n    this.setState({\r\n      filteredPoolList: this.state.poolList.filter(\r\n        item =>\r\n          poolFilter !== \"Any\"\r\n            ? item.indoor_out === poolFilter\r\n            : \"Indoor\" || \"Outdoor\"\r\n      )\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <header>\r\n          <h1>Circle Swim</h1>\r\n        </header>\r\n        <main>\r\n          <PoolList\r\n            getClickedPoolId={this.getClickedPoolId}\r\n            poolList={this.state.filteredPoolList}\r\n            handleChange={this.handleChange}\r\n          />\r\n\r\n          {this.state.filteredPoolList.length > 0 && (\r\n            <Map\r\n              poolList={this.state.filteredPoolList}\r\n              handleChange={this.handleChange}\r\n              clickedPoolId={this.state.clickedPoolId}\r\n            />\r\n          )}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}